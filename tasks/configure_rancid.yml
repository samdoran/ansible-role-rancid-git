---
- name: CONFIGURE | Copy hosts file
  template:
    src: hosts.j2
    dest: /etc/hosts
    owner: root
    group: root
    mode: 0644
  tags:
    - rancid
    - rancid-routerdb
    - rancid-devices
    - rancid-hosts

- name: CONFIGURE | Set permissions on {{ rancid_home }}
  file:
    path: "{{ rancid_home }}"
    owner: root
    group: rancid
    mode: 0770
  tags:
    - rancid
    - rancid-user

- name: CONFIGURE | Create .ssh folder for rancid user
  file:
    path: "{{ rancid_home }}/.ssh"
    state: directory
    owner: rancid
    group: rancid
    mode: 0700
  tags:
    - rancid
    - rancid-user
    - rancid-ssh

- name: CONFIGURE | Install SSH public key for rancid user
  template:
    src: rancid_id_rsa.pub.j2
    dest: "{{ rancid_home }}/.ssh/id_rsa.pub"
    owner: rancid
    group: rancid
    mode: 0640
  when: rancid_ssh_public_key is defined
  tags:
    - rancid
    - rancid-user
    - rancid-ssh

- name: CONFIGURE | Install SSH private key for rancid user
  template:
    src: rancid_id_rsa.j2
    dest: "{{ rancid_home }}/.ssh/id_rsa"
    owner: rancid
    group: rancid
    mode: 0400
  when: rancid_ssh_private_key is defined
  tags:
    - rancid
    - rancid-user
    - rancid-ssh

- name: CONFIGURE | Generate SSH key for rancid user if rancid_ssh_private_key is not defined
  user:
    name: rancid
    generate_ssh_key: yes
  when: rancid_ssh_private_key is not defined
  tags:
    - rancid
    - rancid-user
    - rancid-ssh

- name: CONFIGURE | Set password for rancid user
  user:
    name: rancid
    password: "{{ rancid_password_hash }}"
  tags:
    - rancid
    - rancid-user
    - rancid-password

- name: CONFIGURE | Add /usr/libexec/rancid to PATH for rancid user
  lineinfile:
    state: present
    dest: "{{ rancid_home }}/.bash_profile"
    line: 'PATH=$PATH:/usr/libexec/rancid'
    insertbefore: 'export PATH'
  tags:
    - rancid
    - rancid-user
    - rancid-profile

- name: CONFIGURE | Copy rancid.conf
  template:
    src: rancid.conf.j2
    dest: /etc/rancid/rancid.conf
    owner: root
    group: rancid
    mode: 0640
  notify: run rancid-cvs
  tags:
    - rancid
    - rancid-conf

- name: CONFIGURE | Copy cloginrc
  template:
    src: cloginrc.j2
    dest: "{{ rancid_home }}/.cloginrc"
    owner: root
    group: rancid
    mode: 0640
  tags:
    - rancid
    - rancid-cloginrc
    - rancid-devices

- name: CONFIGURE | Configure notify groups
  lineinfile:
    state: present
    dest: /etc/aliases
    regexp: "^rancid-{{ item.group }}"
    line: "rancid-{{ item.group }}:     {{ item.notify }}"
  with_items: "{{ rancid_notify_groups }}"
  when: rancid_notify_groups is defined
  notify: rehash aliases
  tags:
    - rancid
    - rancid-postfix
    - rancid-aliases

- name: CONFIGURE | Create admin notify groups in /etc/aliases
  lineinfile:
    state: present
    dest: /etc/aliases
    regexp: "^rancid-admin-{{ item.group }}"
    line: "rancid-admin-{{ item.group }}:     {{ item.admin_notify }}"
  with_items: "{{ rancid_notify_groups }}"
  when: rancid_notify_groups is defined
  notify: rehash aliases
  tags:
    - rancid
    - rancid-postfix
    - rancid-aliases

- name: CONFIGURE | Remove notify groups when not defined
  lineinfile:
    state: absent
    regexp: "^rancid-"
    dest: /etc/aliases
  when: rancid_notify_groups is not defined
  notify: rehash aliases
  tags:
    - rancid
    - rancid-postfix
    - rancid-aliases

- name: CONFIGURE | Run rancid-cvs
  command: /usr/libexec/rancid/rancid-cvs
  become_user: rancid
  register: rancidcvs_run
  changed_when: rancidcvs_run.stdout != ''
  tags:
    - rancid
    - rancid-conf
    - rancid-cvs

- name: CONFIGURE | Create router.db files for each group
  template:
    src: router.db.j2
    dest: "{{ rancid_home }}/{{ item.key }}/router.db"
  become_user: rancid
  with_dict: "{{ rancid_network_devices }}"
  tags:
    - rancid
    - rancid-routerdb
    - rancid-devices

- name: CONFIGURE | Install cron jobs that run RANCID
  cron:
    name: "{{ item.name }}"
    state: "{{ item.state }}"
    disabled: "{{ item.disabled | default('no') }}"
    user: "{{ item.user }}"
    month: "{{ item.month | default('*') }}"
    day: "{{ item.day | default('*') }}"
    hour: "{{ item.hour | default('*') }}"
    minute: "{{ item.minute }}"
    job: "{{ item.job }}"
  with_items: "{{ rancid_cron }}"
  tags:
    - rancid
    - rancid-cron
